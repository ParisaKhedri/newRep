import { shield, allow } from "graphql-shield";
import { isAuthorized } from './rules/isAuthorized.js';

const permissions = shield({
    RootQueryType: {
            getAllUsers: isAuthorized,
            getUserByUserName: isAuthorized,
            getAllJournalsFromUser: isAuthorized,
            getJournalById: isAuthorized,
            getAllJournalEntriesInJournal: isAuthorized,
            getJournalEntryByID: isAuthorized,
            getAllConversationsByID: isAuthorized,
            getAllUserConversationsByUserID: isAuthorized,
            getSpecificUserConversation: isAuthorized,
            getUserConversationByUserConversationID: isAuthorized,
            getAllUserFollowByFollower: isAuthorized,
            getAllUserFollowByFollowed: isAuthorized,
            getSpecificUserFollow: isAuthorized,
            getAllBlockedByBlockerID: isAuthorized,
            getSpecificBlock: isAuthorized,
            getAllJournalFollowsByUserID: isAuthorized,
            getAllJournalFollowsByJournalID: isAuthorized,
            getSpecificJournalFollow: isAuthorized,
            getAllJournalsByUserName: isAuthorized,
            getResponderInConversation: isAuthorized, 
            getUserByID: isAuthorized, 
            getAllFollowedJournals: isAuthorized, 
            getAllMessagesInConversationByConversationID: isAuthorized,
            getAllUserAndConversationsByUserID: isAuthorized,
    },

    RootMutationType: {
        createUser: allow,
        signInUser: allow,
        signOutUser: isAuthorized,
        deleteUser: isAuthorized,
        changeUserPhoneNumber: isAuthorized,
        changeUserEmail: isAuthorized,
        changeUserFirstName: isAuthorized,
        changeUserLastName: isAuthorized,
        changeUserName: isAuthorized,
        changePassword: isAuthorized,
        changeProfileImage: isAuthorized,
        changeProfileInfo: isAuthorized,
        createMessage: isAuthorized,
        createJournal: isAuthorized,
        changeJournalName: isAuthorized,
        changeJournalDescription: isAuthorized,
        changePublicity: isAuthorized,
        createJournalEntry: isAuthorized,
        changeEntryBody: isAuthorized,
        createConversation: isAuthorized,
        createUserConversation: isAuthorized,
        createUserFollow: isAuthorized,
        deleteUserFollow: isAuthorized,
        createBlock: isAuthorized,
        createJournalFollow: isAuthorized,
        uploadImage: isAuthorized,
    },
},
{
    debug: true,
    allowExternalErrors: true,
});
export default permissions;